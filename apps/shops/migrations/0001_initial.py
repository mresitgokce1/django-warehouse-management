# Generated by Django 4.2.23 on 2025-09-01 12:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
        ('brands', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Mağaza Adı')),
                ('slug', models.SlugField(max_length=100, verbose_name='URL Slug')),
                ('code', models.CharField(help_text='Dahili mağaza kodu', max_length=20, verbose_name='Mağaza Kodu')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('address', models.TextField(verbose_name='Adres')),
                ('city', models.CharField(max_length=50, verbose_name='Şehir')),
                ('district', models.CharField(blank=True, max_length=50, null=True, verbose_name='İlçe')),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Posta Kodu')),
                ('country', models.CharField(default='Türkiye', max_length=50, verbose_name='Ülke')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Enlem')),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Boylam')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('is_main_shop', models.BooleanField(default=False, verbose_name='Ana Mağaza')),
                ('opening_hours', models.TextField(blank=True, help_text='JSON formatında saklanan çalışma saatleri', null=True, verbose_name='Çalışma Saatleri')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shops', to='brands.brand', verbose_name='Marka')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_shops', to=settings.AUTH_USER_MODEL, verbose_name='Mağaza Müdürü')),
            ],
            options={
                'verbose_name': 'Mağaza',
                'verbose_name_plural': 'Mağazalar',
                'ordering': ['name'],
                'unique_together': {('brand', 'slug'), ('brand', 'code')},
            },
        ),
        migrations.CreateModel(
            name='ShopStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(help_text='Mağazadaki pozisyonu (örn: Satış Danışmanı, Kasiyer)', max_length=100, verbose_name='Pozisyon')),
                ('is_primary', models.BooleanField(default=False, help_text='Bu kullanıcının ana çalıştığı mağaza mı?', verbose_name='Birincil Mağaza')),
                ('start_date', models.DateField(verbose_name='Başlama Tarihi')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Bitiş Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='shops.shop', verbose_name='Mağaza')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Mağaza Personeli',
                'verbose_name_plural': 'Mağaza Personelleri',
                'ordering': ['-created_at'],
                'unique_together': {('shop', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ShopInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Miktar')),
                ('reserved_quantity', models.PositiveIntegerField(default=0, help_text='Siparişlerde rezerve edilen miktar', verbose_name='Rezerve Miktar')),
                ('min_stock_level', models.PositiveIntegerField(default=0, verbose_name='Minimum Stok Seviyesi')),
                ('max_stock_level', models.PositiveIntegerField(default=1000, verbose_name='Maksimum Stok Seviyesi')),
                ('last_restocked', models.DateTimeField(blank=True, null=True, verbose_name='Son Stok Yenileme')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_inventory', to='products.product', verbose_name='Ürün')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='shops.shop', verbose_name='Mağaza')),
            ],
            options={
                'verbose_name': 'Mağaza Envanteri',
                'verbose_name_plural': 'Mağaza Envanterleri',
                'ordering': ['product__name'],
                'unique_together': {('shop', 'product')},
            },
        ),
    ]

# Generated by Django 4.2.23 on 2025-09-01 12:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
        ('shops', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Depo Adı')),
                ('code', models.CharField(max_length=20, verbose_name='Depo Kodu')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('total_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Toplam Alan (m²)')),
                ('usable_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Kullanılabilir Alan (m²)')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Yükseklik (m)')),
                ('corridor_count', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='Koridor Sayısı')),
                ('temperature_controlled', models.BooleanField(default=False, verbose_name='Sıcaklık Kontrollü')),
                ('min_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Minimum Sıcaklık (°C)')),
                ('max_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Maksimum Sıcaklık (°C)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='warehouse_qr_codes/', verbose_name='QR Kod')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to='shops.shop', verbose_name='Mağaza')),
            ],
            options={
                'verbose_name': 'Depo',
                'verbose_name_plural': 'Depolar',
                'ordering': ['name'],
                'unique_together': {('shop', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Corridor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Koridor Numarası')),
                ('name', models.CharField(max_length=100, verbose_name='Koridor Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('cell_count', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Hücre Sayısı')),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Uzunluk (m)')),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Genişlik (m)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corridors', to='warehouses.warehouse', verbose_name='Depo')),
            ],
            options={
                'verbose_name': 'Koridor',
                'verbose_name_plural': 'Koridorlar',
                'ordering': ['number'],
                'unique_together': {('warehouse', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Hücre Numarası')),
                ('name', models.CharField(max_length=100, verbose_name='Hücre Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Uzunluk (cm)')),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Genişlik (cm)')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Yükseklik (cm)')),
                ('max_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Maksimum Ağırlık (kg)')),
                ('max_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maksimum Hacim (cm³)')),
                ('is_occupied', models.BooleanField(default=False, verbose_name='Dolu')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('is_reserved', models.BooleanField(default=False, verbose_name='Rezerve')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='cell_qr_codes/', verbose_name='QR Kod')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('corridor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cells', to='warehouses.corridor', verbose_name='Koridor')),
            ],
            options={
                'verbose_name': 'Hücre',
                'verbose_name_plural': 'Hücreler',
                'ordering': ['number'],
                'unique_together': {('corridor', 'number')},
            },
        ),
        migrations.CreateModel(
            name='ProductLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Miktar')),
                ('position_notes', models.CharField(blank=True, help_text='Hücre içindeki konum bilgisi', max_length=200, null=True, verbose_name='Pozisyon Notları')),
                ('placed_at', models.DateTimeField(auto_now_add=True, verbose_name='Yerleştirilme Tarihi')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Son Güncelleme')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Son Kullanma Tarihi')),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Parti Numarası')),
                ('cell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_products', to='warehouses.cell', verbose_name='Hücre')),
                ('placed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='placed_products', to=settings.AUTH_USER_MODEL, verbose_name='Yerleştiren')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='products.product', verbose_name='Ürün')),
            ],
            options={
                'verbose_name': 'Ürün Konumu',
                'verbose_name_plural': 'Ürün Konumları',
                'ordering': ['-placed_at'],
                'unique_together': {('product', 'cell', 'batch_number')},
            },
        ),
    ]
